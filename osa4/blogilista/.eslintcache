[{"C:\\devel\\React\\fullStack2020\\osa4\\blogilista\\src\\index.js":"1"},{"size":925,"mtime":1607130128073,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"qxvgp6","C:\\devel\\React\\fullStack2020\\osa4\\blogilista\\src\\index.js",["7"],"const http = require('http')\nconst express = require('express')\nconst app = express()\nconst cors = require('cors')\nconst mongoose = require('mongoose')\n\nconst blogSchema = mongoose.Schema({\n  title: String,\n  author: String,\n  url: String,\n  likes: Number\n})\n\nconst Blog = mongoose.model('Blog', blogSchema)\n\nconst mongoUrl = 'mongodb://localhost/bloglist'\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true, useFindAndModify: false, useCreateIndex: true })\n\napp.use(cors())\napp.use(express.json())\n\napp.get('/api/blogs', (request, response) => {\n  Blog\n    .find({})\n    .then(blogs => {\n      response.json(blogs)\n    })\n})\n\napp.post('/api/blogs', (request, response) => {\n  const blog = new Blog(request.body)\n\n  blog\n    .save()\n    .then(result => {\n      response.status(201).json(result)\n    })\n})\n\nconst PORT = 3003\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`)\n})",{"ruleId":"8","severity":1,"message":"9","line":1,"column":7,"nodeType":"10","messageId":"11","endLine":1,"endColumn":11},"no-unused-vars","'http' is assigned a value but never used.","Identifier","unusedVar"]